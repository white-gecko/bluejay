version: '3'

tasks:
  upkgs:
    aliases: ["user-packages"]
    desc: Install userspace packages
    cmds:
      - task: upkgs:brew
      - task: upkgs:pipx

  upkgs:brew:
    desc: Install homebrew packages
    cmds:
      - |
        brew install \
          chezmoi \
          ncspot \
          minikube \
          kubernetes-cli \
          openshift-cli

  upkgs:pipx:
    desc: Install pipx packages
    cmds:
      - |
        pipx install \
          poetry \
          ruff \
          organize-tool \
          git+https://github.com/enzet/map-machine \
          git+https://github.com/white-gecko/git-watchtower

  upkgs:ppm:
    aliases: ["upkgs:pulsar"]
    desc: Install pulsar packages
    cmds:
      - |
        ppm install language-vue
        ppm install language-rdf

  yarn:
    aliases: ["corepack"]
    desc: Enable yarn via corepack
    summary: |
      Setup npm to install global packages for the user.
      Install corepack since it is not available in the fedora packages.
      Then yarn should be available.
      See also: https://yarnpkg.com/corepack#installation
    cmds:
      - |
        echo "Setup user config path for npm â€¦"
        npm config set prefix '~/.local/'
        echo "Install corepack"
        npm install -g corepack
        echo "Now yarn should be available"

  docker-cli:
    desc: Install just the docker CLI
    summary: |
      Since this system uses podman and has set docker as alias for podman, there is not docker.
      If you need docker e.g. to connect to the minikube docker host this script just loads the docker cli from a docker:dind image.
    cmds:
      - |
        dind_container_id=$(podman create docker.io/docker:dind)
        podman cp ${dind_container_id}:/usr/local/bin/docker ~/.local/bin/docker-cli
        podman rm ${dind_container_id}
        echo "You could now run `podman rmi `docker.io/docker:dind` if you like"
        echo "The Docker CLI is now available as `docker-cli`"
